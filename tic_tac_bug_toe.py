'''A buggy Tic-Tac-Toe game that provides an opportunity to debug code by both reasoning about it and stepping through it in a debugger.
The program has a number of bugs that are introduced one at a time. The goal is to find and fix the bugs.
Ensure you step through this program in an IDE debugger to understand how the program works and to find the bugs.'''

# A buggy Tic-Tac-Toe game partially generated by ChatGPT-4

board = [[' ' for _ in range(3)] for _ in range(3)]


def print_board():
    """
    Prints the Tic-Tac-Toe Board.
    """
    for row in range(3):
        for column in range(3):
            print(board[row][column], end='')
            if column < 2:
                print("|", end='')
        print()
        if row < 2:
            print("-----")


def is_win(player, board):
    """
    Check if the current player won the game.
    :param player: ('X' or 'O') to check for win.
    :return: True if the player won, and False if not.
    """
    for i in range(3):
        if all([cell == player for cell in board[i]]):  # Rows
            return True
        if all([board[j][i] == player for j in range(3)]):  # Columns
            return True
    if (board[0][0] == board[1][1] == board[2][2] == player) or (
        board[0][2] == board[1][1] == board[2][0] == player):  # Diagonals
        return True
    return False


def tally_wins(results):
    """
    Numbers of win from a list of game.
    :param results: List of bool values indicating weather each game resulted in a win.
    :return: The total numbers of wins.
    """
    return sum(results)


def main():
    """
    Main function
    """
    current_player = 'X'
    moves = 0
    results = []

    while moves < 9:
        print_board()
        try:
            row, col = map(int, input(f"Player {current_player}, enter row and column (0-2) separated by space: ").split())
            if not (0 <= row <= 2 and 0 <= col <= 2):
                raise ValueError("Input values must be within the range 0-2.")
        except ValueError:
            print(f"Error, enter a value in the range of 0-2!!!")
            continue


        if board[row][col] == ' ':
            board[row][col] = current_player
            win = is_win(current_player)
            results.append(win)
            if win:
                print_board()
                print(f"Player {current_player} wins!")
                return
            current_player = 'O' if current_player == 'X' else 'X'  # Switch player
            moves += 1
        else:
            print("Cell already occupied! Try again.")

    print_board()
    if not any(results):
        print("It's a draw!")
    print(f"Number of wins during the game: {tally_wins(results)}")


if __name__ == "__main__":
    main()
